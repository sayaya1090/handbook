apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  namespace: {{ .Release.Namespace }}
  name: handbook-actions-runner
spec:
  resources:
    limits:
      cpu: '2'
      memory: 4Gi
    requests:
      cpu: '2'
      memory: 4Gi
  source:
    type: Dockerfile
    dockerfile: |
      # Base Image from Red Hat's Universal Base Image 9
      FROM registry.access.redhat.com/ubi9/ubi-init:9.6

      # Metadata labels
      LABEL org.opencontainers.image.title="actions-runner-ubi9"
      LABEL org.opencontainers.image.description="A Red Hat UBI 9 based runner image for GitHub Actions"

      # Arguments for versioning
      ARG RUNNER_VERSION=2.328.0
      ARG RUNNER_CONTAINER_HOOKS_VERSION=0.8.0

      # Environment variables for user and directory setup
      # DOCKER_UID is used for the 'docker' group to avoid conflicts with host GIDs.
      ENV UID=1000
      ENV DOCKER_UID=123
      ENV GID=0
      ENV USERNAME="runner"
      ENV WORKDIR="/home/$USERNAME"
      ENV HOME=$WORKDIR

      # Create non-root user 'runner' and set its home directory
      RUN useradd --gid "${GID}" --uid "${UID}" -ms /bin/zsh "${USERNAME}"
      WORKDIR "${WORKDIR}"

      RUN set -eux && \
      groupadd --gid "${DOCKER_UID}" docker && \

      dnf install -y dnf-plugins-core https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
      dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo && \
      dnf update -y && \

      dnf install -y unzip wget rsync python3-pip \
          docker-ce fuse-overlayfs gh git git-lfs jq \
          libicu libyaml-devel lttng-ust net-tools zsh \
          vulkan \
          https://rpmfind.net/linux/almalinux/9.6/BaseOS/x86_64/os/Packages/glibc-langpack-ko-2.34-168.el9_6.23.x86_64.rpm \
          https://download.rockylinux.org/vault/rocky/9.6/AppStream/x86_64/kickstart/Packages/l/liberation-sans-fonts-2.1.3-5.el9.noarch.rpm \
          https://download.rockylinux.org/vault/rocky/9.6/AppStream/x86_64/kickstart/Packages/l/liberation-serif-fonts-2.1.3-5.el9.noarch.rpm \
          https://download.rockylinux.org/vault/rocky/9.6/AppStream/x86_64/kickstart/Packages/l/liberation-fonts-2.1.3-5.el9.noarch.rpm \
          https://download.rockylinux.org/vault/rocky/9.6/AppStream/x86_64/kickstart/Packages/x/xdg-utils-1.1.3-13.el9_6.noarch.rpm \
          https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm && \

      pip3 install awscli && \

      curl -L "https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz" | tar -xz && \
      ./bin/installdependencies.sh && \

      curl -f -L -o runner-container-hooks.zip "https://github.com/actions/runner-container-hooks/releases/download/v${RUNNER_CONTAINER_HOOKS_VERSION}/actions-runner-hooks-k8s-${RUNNER_CONTAINER_HOOKS_VERSION}.zip" && \
      unzip ./runner-container-hooks.zip -d ./k8s && \
      rm runner-container-hooks.zip && \

      curl -L "https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz" | tar -zx -C /usr/local/bin oc kubectl && \

      curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash && \

      usermod -aG docker "${USERNAME}" && \
      systemctl enable docker && \

      dnf clean all && \
      rm -rf /var/cache/dnf /tmp/* /var/tmp/* && \

      chown -R "${USERNAME}":"${GID}" "${WORKDIR}"

      USER "${USERNAME}"
      RUN sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended && \
      echo 'if [ -t 1 ]; then exec zsh; fi' >> "${HOME}/.shrc"

      # Set locale and environment for the shell
      ENV LANG='ko_KR.UTF-8'
      ENV LANGUAGE='ko_KR;ko'
      ENV LC_ALL='ko_KR.UTF-8'
      ENV ENV="$HOME/.shrc"

      # Default command to start the runner
      CMD ["./run.sh"]
  strategy:
    type: Docker
  successfulBuildsHistoryLimit: 0
  failedBuildsHistoryLimit: 1
  runPolicy: Serial
  triggers:
    - type: ConfigChange
  output:
    to:
      kind: ImageStreamTag
      name: 'handbook-actions-runner:latest'

---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: handbook-actions-runner
  namespace: {{ .Release.Namespace }}